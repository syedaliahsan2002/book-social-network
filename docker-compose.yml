services:
  mysql:
    container_name: mysql-bsn
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-book_social_network_v2}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - spring-demo
    restart: unless-stopped

  mail-dev:
    container_name: mail-dev-bsn
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - spring-demo

  keycloak:
    container_name: keycloak-bsn
    image: quay.io/keycloak/keycloak:26.1.0
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    command: start-dev
    ports:
      - "9090:8080"
    networks:
      - spring-demo

  bsn-api:
    container_name: bsn-api
    build:
      context: ./book-social-network/book-netwok-api
      dockerfile: ../../docker/backend/Dockerfile
    environment:
      ACTIVE_PROFILE: ${ACTIVE_PROFILE:-dev}
      DB_URL: ${DB_URL:-jdbc:mysql://mysql:3306/book_social_network_v2}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${KEYCLOAK_ISSUER_URI:-http://keycloak-bsn:8080/realms/book-social-network}
    depends_on:
      - mysql
      - keycloak
    ports:
      - "8088:8088"
    networks:
      - spring-demo

  bsn-frontend:
    container_name: bsn-frontend
    build:
      context: ./frontEnd/Book-network-ui
      dockerfile: ../../docker/frontend/Dockerfile
    depends_on:
      - bsn-api
    ports:
      - "8080:80"
    networks:
      - spring-demo

networks:
  spring-demo:
    driver: bridge

volumes:
  mysql-data:
    driver: local
