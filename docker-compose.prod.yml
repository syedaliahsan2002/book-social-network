services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
    networks:
      - web
    restart: unless-stopped

  mysql:
    image: mysql:latest
    container_name: mysql-bsn
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - web
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.0
    container_name: keycloak-bsn
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql-bsn:3306/${MYSQL_DATABASE}
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_PROXY: edge
    command: ["start"]
    depends_on:
      - mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${AUTH_DOMAIN}`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
    ports:
      - "9090:8080"
    networks:
      - web
    restart: unless-stopped

  bsn-api:
    build:
      context: ./book-social-network/book-netwok-api
      dockerfile: ../../docker/backend/Dockerfile
    container_name: bsn-api
    environment:
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      DB_URL: ${DB_URL}
      # Prefer internal JWK set URI to avoid external discovery issues
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak-bsn:8080/realms/book-social-network/protocol/openid-connect/certs
      # Override issuer-uri from application-dev.yml to match tokens from Keycloak tunnel
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://urge-apart-ted-approximate.trycloudflare.com/realms/book-social-network
    depends_on:
      - mysql
      - keycloak
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=web"
    ports:
      - "8088:8088"
    networks:
      - web
    restart: unless-stopped

  bsn-frontend:
    build:
      context: ./frontEnd/Book-network-ui
      dockerfile: ../../docker/frontend/Dockerfile
    container_name: bsn-frontend
    depends_on:
      - bsn-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
    ports:
      - "8080:80"
    networks:
      - web
    restart: unless-stopped

  cloudflared-app:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-app
    command: tunnel --no-autoupdate --url http://bsn-frontend:80
    depends_on:
      - bsn-frontend
    networks:
      - web
    restart: unless-stopped

  cloudflared-api:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-api
    command: tunnel --no-autoupdate --url http://bsn-api:8088
    depends_on:
      - bsn-api
    networks:
      - web
    restart: unless-stopped

  cloudflared-auth:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-auth
    command: tunnel --no-autoupdate --url http://keycloak-bsn:8080
    depends_on:
      - keycloak
    networks:
      - web
    restart: unless-stopped

networks:
  web:
    driver: bridge

volumes:
  mysql-data:
  traefik_letsencrypt:
